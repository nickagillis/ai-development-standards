{
  "name": "ai-development-standards",
  "version": "1.9.7",
  "description": "Shared development standards, architecture patterns, and best practices for AI-human collaborative development with Claude Desktop context optimization",
  "scripts": {
    "validate": "node scripts/validate-standards.js",
    "validate-context": "node scripts/validate-context.js",
    "validate-context-v2": "node scripts/validate-context-v2.js",
    "validate-repository": "bash scripts/auto-validate-repository-settings.sh",
    "validate-auto-healing": "bash scripts/validate-auto-healing-compliance.sh",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "node tests/unit/logger.test.js",
    "test:integration": "node test-integration-fixed.js",
    "test:circular-dependency": "node tests/unit/logger.test.js",
    "test:real-data": "node test-real-data.js",
    "test:quick": "node quick-fix-test.js",
    "test:all": "npm run test && npm run test:real-data",
    "test:auto-healing": "bash scripts/test-auto-healing-integration.sh",
    "test:compliance": "npm run validate-repository && npm run test:auto-healing",
    "check-context": "npm run validate-context",
    "check-links": "echo 'Link checking requires markdown-link-check: npm install -g markdown-link-check'",
    "check-prompt-updates": "bash scripts/check-prompt-updates.sh",
    "update-ai-prompts": "bash scripts/check-prompt-updates.sh && echo 'Review and apply suggested improvements to docs/ai-integration-prompts.md'",
    "setup": "echo 'AI Development Standards ready to use! Run: npm run test'",
    "setup-repository": "bash scripts/setup-repository-compliance.sh",
    "setup-repository-windows": "powershell -ExecutionPolicy Bypass -File scripts/setup-repository-compliance.ps1",
    "verify-compliance": "bash scripts/verify-repository-compliance.sh",
    "health-check": "npm run validate && npm run validate-context && npm run test:unit",
    "health-check-auto-healing": "npm run test:auto-healing && npm run health-check",
    "health-check-complete": "npm run validate-repository && npm run health-check-auto-healing",
    "refactor-analysis": "node scripts/refactor-large-files.js",
    "refactor-large-files": "node scripts/refactor-large-files.js --apply",
    "complexity-check": "node scripts/refactor-large-files.js --no-report",
    "full-analysis": "npm run health-check && npm run refactor-analysis",
    "pre-merge-validation": "node scripts/pre-merge-validation.js",
    "pre-merge-strict": "node scripts/pre-merge-validation.js --strict --fail-on-warnings",
    "pre-merge": "npm run test:unit && npm run pre-merge-validation",
    "pre-merge-auto-healing": "npm run test:auto-healing && npm run pre-merge",
    "pre-merge-complete": "npm run test:compliance && npm run pre-merge-auto-healing",
    "claude-integration": "bash scripts/claude-integration.sh",
    "setup-real-data": "bash scripts/setup-real-data.sh",
    "monitor-ai": "node continuous-ai-monitoring.js",
    "demo-real": "node src/ai-intelligence/demo.js --real-data",
    "start-intelligence": "node continuous-ai-monitoring.js",
    "dev": "npm run test:unit && npm run test:integration",
    "dev-auto-healing": "npm run test:auto-healing && npm run dev",
    "dev-complete": "npm run test:compliance && npm run dev-auto-healing",
    "prod-ready": "NODE_ENV=production npm run test:all && npm run pre-merge-strict",
    "prod-ready-auto-healing": "npm run test:auto-healing && npm run prod-ready",
    "prod-ready-complete": "npm run test:compliance && npm run prod-ready-auto-healing",
    "log-collaboration": "node scripts/working-collaboration-logger.js",
    "log-collaboration-broken": "echo 'BROKEN: node scripts/collaboration-logger-core.js (missing modules)'",
    "community-wisdom": "echo 'BROKEN: community-wisdom-engine-core.js requires non-existent modules'",
    "community-wisdom-broken": "node scripts/community-wisdom-engine-core.js"
  },
  "keywords": [
    "ai",
    "development", 
    "standards",
    "mcp",
    "architecture",
    "security",
    "best-practices",
    "community-wisdom",
    "collective-learning",
    "context-optimization",
    "claude-desktop",
    "modular-design",
    "micro-modules",
    "refactoring",
    "complexity-analysis",
    "automated-validation",
    "pre-merge-validation",
    "ai-verification",
    "real-time-monitoring",
    "ai-intelligence",
    "github-api",
    "arxiv-research",
    "circular-dependency-fix",
    "lazy-loading",
    "production-ready",
    "self-healing",
    "collaboration-logging",
    "auto-healing",
    "mandatory-automation",
    "standards-compliance",
    "repository-automation",
    "branch-protection",
    "self-compliance",
    "repository-validation",
    "github-actions-compatible",
    "ai-integration-prompts",
    "prompt-engineering",
    "community-learning",
    "working-systems"
  ],
  "author": "AI Development Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nickagillis/ai-development-standards.git"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0"
  },
  "scripts-docs": {
    "log-collaboration": "WORKING collaboration logger that actually creates files and logs sessions",
    "log-collaboration-broken": "Points to broken system that requires non-existent modules",
    "community-wisdom": "Currently broken - requires missing ./wisdom-engine/ modules",
    "validate-repository": "Validate GitHub repository compliance settings and score",
    "validate-auto-healing": "Validate auto-healing compliance (GitHub Actions compatible)",
    "test:compliance": "Complete compliance validation (repository + auto-healing)",
    "health-check-complete": "Full health check including repository validation",
    "pre-merge-complete": "Complete pre-merge validation with repository compliance",
    "dev-complete": "Complete development workflow with full compliance",
    "prod-ready-complete": "Complete production readiness with full compliance validation",
    "check-prompt-updates": "Check for community wisdom improvements to AI integration prompts",
    "update-ai-prompts": "Apply community-learned improvements to AI integration prompts"
  }
}