{
  "name": "ai-development-standards",
  "version": "1.8.0",
  "description": "Shared development standards, architecture patterns, and best practices for AI-human collaborative development with Claude Desktop context optimization",
  "scripts": {
    "validate": "node scripts/validate-standards.js",
    "validate-context": "node scripts/validate-context.js",
    "validate-context-v2": "node scripts/validate-context-v2.js",
    "test": "npm run validate",
    "check-context": "npm run validate-context",
    "check-links": "echo 'Link checking requires markdown-link-check: npm install -g markdown-link-check'",
    "setup": "echo 'AI Development Standards ready to use! Run: npm run validate'",
    "health-check": "npm run validate && npm run validate-context",
    "refactor-analysis": "node scripts/refactor-large-files.js",
    "refactor-large-files": "node scripts/refactor-large-files.js --apply",
    "complexity-check": "node scripts/refactor-large-files.js --no-report",
    "full-analysis": "npm run health-check && npm run refactor-analysis",
    "pre-merge-validation": "node scripts/pre-merge-validation.js",
    "pre-merge-strict": "node scripts/pre-merge-validation.js --strict --fail-on-warnings",
    "claude-integration": "bash scripts/claude-integration.sh"
  },
  "keywords": [
    "ai",
    "development", 
    "standards",
    "mcp",
    "architecture",
    "security",
    "best-practices",
    "community-wisdom",
    "collective-learning",
    "context-optimization",
    "claude-desktop",
    "modular-design",
    "micro-modules",
    "refactoring",
    "complexity-analysis",
    "automated-validation",
    "pre-merge-validation",
    "ai-verification"
  ],
  "author": "AI Development Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nickagillis/ai-development-standards.git"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0"
  }
}