{
  "name": "ai-development-standards",
  "version": "1.9.0",
  "description": "Shared development standards, architecture patterns, and best practices for AI-human collaborative development with Claude Desktop context optimization",
  "scripts": {
    "validate": "node scripts/validate-standards.js",
    "validate-context": "node scripts/validate-context.js",
    "validate-context-v2": "node scripts/validate-context-v2.js",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "node tests/unit/logger.test.js",
    "test:integration": "node test-integration-fixed.js",
    "test:circular-dependency": "node tests/unit/logger.test.js",
    "test:real-data": "node test-real-data.js",
    "test:quick": "node quick-fix-test.js",
    "test:all": "npm run test && npm run test:real-data",
    "check-context": "npm run validate-context",
    "check-links": "echo 'Link checking requires markdown-link-check: npm install -g markdown-link-check'",
    "setup": "echo 'AI Development Standards ready to use! Run: npm run test'",
    "health-check": "npm run validate && npm run validate-context && npm run test:unit",
    "refactor-analysis": "node scripts/refactor-large-files.js",
    "refactor-large-files": "node scripts/refactor-large-files.js --apply",
    "complexity-check": "node scripts/refactor-large-files.js --no-report",
    "full-analysis": "npm run health-check && npm run refactor-analysis",
    "pre-merge-validation": "node scripts/pre-merge-validation.js",
    "pre-merge-strict": "node scripts/pre-merge-validation.js --strict --fail-on-warnings",
    "pre-merge": "npm run test:unit && npm run pre-merge-validation",
    "claude-integration": "bash scripts/claude-integration.sh",
    "setup-real-data": "bash scripts/setup-real-data.sh",
    "monitor-ai": "node continuous-ai-monitoring.js",
    "demo-real": "node src/ai-intelligence/demo.js --real-data",
    "start-intelligence": "node continuous-ai-monitoring.js",
    "dev": "npm run test:unit && npm run test:integration",
    "prod-ready": "NODE_ENV=production npm run test:all && npm run pre-merge-strict",
    "log-collaboration": "node scripts/log-collaboration-session.js"
  },
  "keywords": [
    "ai",
    "development", 
    "standards",
    "mcp",
    "architecture",
    "security",
    "best-practices",
    "community-wisdom",
    "collective-learning",
    "context-optimization",
    "claude-desktop",
    "modular-design",
    "micro-modules",
    "refactoring",
    "complexity-analysis",
    "automated-validation",
    "pre-merge-validation",
    "ai-verification",
    "real-time-monitoring",
    "ai-intelligence",
    "github-api",
    "arxiv-research",
    "circular-dependency-fix",
    "lazy-loading",
    "production-ready",
    "self-healing",
    "collaboration-logging"
  ],
  "author": "AI Development Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nickagillis/ai-development-standards.git"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0"
  },
  "scripts-docs": {
    "test": "Run all tests (unit + integration)",
    "test:unit": "Run unit tests for logger and core systems",
    "test:integration": "Run integration tests with fixed circular dependency",
    "test:circular-dependency": "Specifically test circular dependency fix",
    "test:real-data": "Test with real GitHub/arXiv APIs",
    "test:quick": "Quick test to verify system works",
    "test:all": "Complete test suite including real APIs",
    "health-check": "Quick system health validation",
    "pre-merge": "Pre-merge validation with unit tests",
    "dev": "Development workflow (unit + integration tests)",
    "prod-ready": "Production readiness validation",
    "log-collaboration": "Log AI collaboration session for Community Wisdom Engine"
  }
}